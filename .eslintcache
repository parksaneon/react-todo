[{"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\index.js":"1","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\App.js":"3","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\rootReducer.js":"4","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\containers\\todo.js":"5","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\containers\\counter.js":"6","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\counter.js":"7","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\todoList.js":"8","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\api.js":"9","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\components\\todo.js":"10","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\components\\counter.js":"11"},{"size":1078,"mtime":1610613655992,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":290,"mtime":1610153215924,"results":"15","hashOfConfig":"13"},{"size":518,"mtime":1610693049126,"results":"16","hashOfConfig":"13"},{"size":921,"mtime":1610693399316,"results":"17","hashOfConfig":"13"},{"size":927,"mtime":1610537265388,"results":"18","hashOfConfig":"13"},{"size":1721,"mtime":1610692491167,"results":"19","hashOfConfig":"13"},{"size":2846,"mtime":1610694365229,"results":"20","hashOfConfig":"13"},{"size":663,"mtime":1610711573276,"results":"21","hashOfConfig":"13"},{"size":1552,"mtime":1610716392041,"results":"22","hashOfConfig":"13"},{"size":585,"mtime":1610155646265,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1f80kes",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\index.js",[],["49","50"],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\App.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\rootReducer.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\containers\\todo.js",["51"],"import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Todos from \"../components/todo\";\r\nimport { addTodo, toggleTodo, getTodo, deleteTodo } from \"../modules/todoList\";\r\n\r\nfunction TodosContainer() {\r\n  const [] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const getTodos = useCallback(async () => {\r\n    dispatch(getTodo());\r\n  }, [dispatch]);\r\n\r\n  const todos = useSelector((state) => state.todos);\r\n  const onCreate = (text) => dispatch(addTodo(text));\r\n  const onToggle = useCallback((id, done) => dispatch(toggleTodo(id, done)), [\r\n    dispatch,\r\n  ]);\r\n  const onDelete = useCallback((id) => dispatch(deleteTodo(id)), [dispatch]);\r\n\r\n  return (\r\n    <Todos\r\n      todos={todos}\r\n      onCreate={onCreate}\r\n      onToggle={onToggle}\r\n      getTodos={getTodos}\r\n      deleteTodo={onDelete}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TodosContainer;\r\n","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\containers\\counter.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\counter.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\todoList.js",["52","53"],"import axios from \"../../node_modules/axios/index\";\r\nimport { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getTodosApi, addTodoApi, deleteTodoApi, toggleTodoApi } from \"./api\";\r\n\r\nconst tempItem = {\r\n  id: 1,\r\n  text: \"예시\",\r\n  done: false,\r\n};\r\n\r\nconst initialState = [tempItem];\r\n\r\n// 초기 상태 정의\r\nlet nextId = 0;\r\n\r\n// Action Type 정의\r\nconst GET_TODO_LIST = \"TODO/GET_TODO_LIST\";\r\nconst SUCCESS_TODO_LIST = \"TODO/SUCCESS_TODO_LIST\";\r\nconst ADD_TODO_LIST = \"TODO/ADD_TODO_LIST\";\r\nconst DEL_TODO_LIST = \"TODO/DEL_TODO_LIST\";\r\nconst TOGGLE_TODO_ITEM = \"TODO/TOGGLE_TODO_ITEM\";\r\nconst ERROR_TODO_LIST = \"TODO/ERROR_TODO_LIST\";\r\n\r\n// Action Creator Function\r\nexport const getTodo = () => ({\r\n  type: GET_TODO_LIST,\r\n});\r\n\r\nexport const success = (todos) => ({\r\n  type: SUCCESS_TODO_LIST,\r\n  todos,\r\n});\r\n\r\nexport const addTodo = (text) => ({\r\n  type: ADD_TODO_LIST,\r\n  todo: {\r\n    id: (nextId += 1),\r\n    text,\r\n    done: false,\r\n  },\r\n});\r\n\r\nexport const deleteTodo = (id) => ({\r\n  type: DEL_TODO_LIST,\r\n  id,\r\n});\r\n\r\nexport const toggleTodo = (id, done) => ({\r\n  type: TOGGLE_TODO_ITEM,\r\n  id,\r\n  done: !done,\r\n});\r\n\r\n// reducer\r\nconst todos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODO_LIST:\r\n      return state;\r\n    case SUCCESS_TODO_LIST:\r\n      return action.todos;\r\n    case ADD_TODO_LIST:\r\n      return state.concat(action.todo);\r\n    case DEL_TODO_LIST:\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case TOGGLE_TODO_ITEM:\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n\r\n// ---------------------------------------------------------- saga\r\n\r\nexport function* getTodosSaga() {\r\n  try {\r\n    const todos = yield call(getTodosApi);\r\n    nextId = todos.length;\r\n    yield put(success(todos));\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nexport function* addTodosSaga({ todo }) {\r\n  try {\r\n    yield call(addTodoApi, todo);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nexport function* delTodosSaga({ id }) {\r\n  try {\r\n    yield call(deleteTodoApi, id);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nexport function* toggleTodosSaga({ id, done }) {\r\n  try {\r\n    yield call(toggleTodoApi, id, done);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\n// 특정 액션 모니터링\r\nexport function* watchGetTodos() {\r\n  yield takeEvery(GET_TODO_LIST, getTodosSaga);\r\n}\r\nexport function* watchAddTodos() {\r\n  yield takeEvery(ADD_TODO_LIST, addTodosSaga);\r\n}\r\nexport function* watchDelTodos() {\r\n  yield takeEvery(DEL_TODO_LIST, delTodosSaga);\r\n}\r\nexport function* watchToggleTodos() {\r\n  yield takeEvery(TOGGLE_TODO_ITEM, toggleTodosSaga);\r\n}\r\n","C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\modules\\api.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\components\\todo.js",["54"],"C:\\Users\\user\\Documents\\코딩\\react\\react-todolist\\src\\components\\counter.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":9,"nodeType":"61","messageId":"62","endLine":7,"endColumn":11},{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":22,"column":7,"nodeType":"65","messageId":"66","endLine":22,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":44,"column":6,"nodeType":"70","endLine":44,"endColumn":8,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'ERROR_TODO_LIST' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array. If 'getTodos' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [getTodos]",{"range":"77","text":"78"},[1147,1149],"[getTodos]"]